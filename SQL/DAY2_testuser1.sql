/* 03.12(금) 복습
    1. NOT NULL : 설정한 COLUMN에 NULL 입력불가
    2. UNIQUE : COLUMN에 중복된 데이터 입력 불가
    3. PRIMARY KEY : NOT NULL + UNIQUE 고유 식별자로 사용하겠다는 의미
    4. FOREIGN KEY : 다른 TABLE의 값을 참조 -> PRIMARY KEY OR UNIQUE
    [DELETE]
    1) 삭제 불가능
    2) NULL값으로 변경 // ON DELETE SET NULL
    3) 참조 데이터도 같이 삭제 // ON DELETE CASCADE
*/

/*
    [쇼핑몰 회원 테이블]
    회원번호
    회원아이디
    비밀번호
    이름
    나이
    전화번호
*/

CREATE TABLE SHOP_MEMBER(
    MEMBER_NO       NUMBER          PRIMARY KEY,
    MEMBER_ID       VARCHAR2(20)    UNIQUE NOT NULL,
    MEMBER_PW       VARCHAR2(30)    NOT NULL,
    MEMBER_NAME     VARCHAR2(15),
    MEMBER_AGE      NUMBER,
    PHONE           CHAR(13)
);

INSERT INTO SHOP_MEMBER VALUES (1, 'test1', '1234', '테스터', 33, '010-2323-1111');
INSERT INTO SHOP_MEMBER VALUES (2, 'test2', '1234', '테스터2', 33, '010-2323-1111');
INSERT INTO SHOP_MEMBER VALUES (3, 'test3', '1234', '테스터3', 33, '010-2323-1111');
INSERT INTO SHOP_MEMBER VALUES (4, 'test4', '1234', '테스터4', 33, '010-2323-1111');
INSERT INTO SHOP_MEMBER VALUES (5, 'test5', '1234', '테스터5', 33, '010-2323-1111');
SELECT * FROM SHOP_MEMBER;

/* [구매목록 TABLE] */
CREATE TABLE BUY_LIST(
    BUY_NO          NUMBER          PRIMARY KEY,
    PRODUCT_NAME    VARCHAR2(100)   NOT NULL,
    BUY_MEMBER      VARCHAR2(20)    REFERENCES SHOP_MEMBER(MEMBER_ID) ON DELETE CASCADE
);
DROP TABLE BUY_LIST;
INSERT INTO BUY_LIST VALUES(1, '갤럭시', 'test2');
INSERT INTO BUY_LIST VALUES(2, '아이폰', 'test3');

DELETE FROM SHOP_MEMBER WHERE MEMBER_NO=2;
/*INSERT INTO BUY_LIST VALUES(3, '맥북', 'test100');*/
SELECT * FROM SHOP_MEMBER;
SELECT * FROM BUY_LIST;

/* 0312(금) 실습 */
CREATE TABLE MEMBER_NOCONS(
    MEMBER_NO   NUMBER  PRIMARY KEY,
    MEMBER_ID   VARCHAR2(20) UNIQUE NOT NULL,
    GENDER      CHAR(6)
);
INSERT INTO MEMBER_NOCONS VALUES(1, 'user01', '남자');
INSERT INTO MEMBER_NOCONS VALUES(2, 'user02', '여자');
INSERT INTO MEMBER_NOCONS VALUES(3, 'user03', '남성');
INSERT INTO MEMBER_NOCONS VALUES(4, 'user04', '여성');
SELECT * FROM MEMBER_NOCONS;

CREATE TABLE MEMBER_CHECK(
    MEMBER_NO   NUMBER          PRIMARY KEY,
    MEMBER_ID   VARCHAR2(20)    UNIQUE NOT NULL,
    GENDER      CHAR(6)         CHECK(GENDER IN('남자', '여자'))
);

INSERT INTO MEMBER_CHECK VALUES(1, 'user01', '남자');
INSERT INTO MEMBER_CHECK VALUES(2, 'user02', '남자');
INSERT INTO MEMBER_CHECK VALUES(3, 'user03', '남성');
INSERT INTO MEMBER_CHECK VALUES(4, 'user04', '여성');
SELECT * FROM MEMBER_CHECK;

CREATE TABLE PRODUCT(
    PRO_NO      NUMBER          PRIMARY KEY,
    PRO_NAME    VARCHAR2(100)   NOT NULL,
    STOCK       NUMBER
);
INSERT INTO PRODUCT VALUES(1, '맥북', 20);
INSERT INTO PRODUCT VALUES(2, '노트북', 30);
SELECT * FROM PRODUCT;

--테이블을 수정 
--1. column 추가
ALTER TABLE PRODUCT ADD(PRICE NUMBER);
--2. column 수정
ALTER TABLE PRODUCT MODIFY PRO_NAME VARCHAR2(300);
DESC PRO; -- 간단한 테이블 정보 출력
--3. 제약조건 사항을 확인
SELECT
    UC.CONSTRAINT_NAME,
    UC.CONSTRAINT_TYPE,
    UC.TABLE_NAME,
    UCC.COLUMN_NAME,
    UC.SEARCH_CONDITION
FROM
    USER_CONSTRAINTS UC
    JOIN USER_CONS_COLUMNS UCC ON (
        UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME
    )
WHERE
    UC.TABLE_NAME = 'PRO';
    
-- PRO_NAME 컬럼에 UNIQUE 제약조건 추가
ALTER TABLE PRODUCT ADD CONSTRAINT PRO_NAME_UNQ UNIQUE ( PRO_NAME );
-- STOCK 컬럼에 NOT NULL 제약조건 추가
ALTER TABLE PRODUCT MODIFY STOCK CONSTRAINT STOCK_NN NOT NULL;
-- PRO_NAME 컬럼에 UNIQUE 제약조건 삭제 제약조건 이름 PRO_NAME_UNQ
ALTER TABLE PRODUCT DROP CONSTRAINT PRO_NAME_UNQ;
-- STOCK 컬럼에 NOT NULL 제약조건 삭제
ALTER TABLE PRODUCT MODIFY STOCK NULL;

--제약 조건 이름 변경 SYS_C007053 SYS_C007054
ALTER TABLE PRODUCT RENAME CONSTRAINT SYS_C007053 TO PRO_NAME_NN;
ALTER TABLE PRODUCT RENAME CONSTRAINT SYS_C007054 TO PRO_NO_PK;

-- 컬럼 이름 변경
ALTER TABLE PRODUCT RENAME COLUMN STOCK TO AMOUNT;
SELECT * FROM PRO;
-- 테이블 이름 변경
ALTER TABLE PRODUCT RENAME TO PRO;


DROP TABLE PRO;

SELECT * FROM SHOP_MEMBER;
SELECT * FROM BUY_LIST;
DROP TABLE BUY_LIST;
DROP TABLE SHOP_MEMBER CASCADE CONSTRAINTS;
DROP TABLE MEMBER_NOCONS;
